		===========================================
				Bitwise Operators (MOST IMP)
		===========================================
=>These operators are internally Converting Decimal Number System data into Binary Number System and Operates on Binary Data in the form Bit by Bit .
=>Bitwise Operator works on Integer data only but not float type data(bcoz float is providing infinite number decimal places).

=>We have six bitwise operators . they are

	1) Bitwise Left Shift Operator ( << )
	2) Bitwise Right Shift Operator ( >> )
	3) Bitwise OR Operator ( | )
	4) Bitwise AND Operator ( & )      
	5) Bitwise  Complement Operator ( ~ )
	6) Bitiwse  XOR Operator  ( ^ )
-----------------------------------------------------------------------------------------------------------
1) Bitwise Left Shift Operator ( << ):
------------------------------------------------------
Syntax:-		varname= GivenIntegerData<<No.of bits
---------------
=>This operator shift the "No.of Bits" towards left side by adding No.of Zeros at right side (must be equal No. of Bits shifted toward Left)

Examples:
-------------------
>>> res=10<<3
>>> print(res)
80
>>> print(10<<4)
160
>>> print(23<<5)
736
=----------------------------------------------------------------------------------------------------------
2) Bitwise Right Shift Operator (>> ):
------------------------------------------------------
Syntax:-		varname= GivenIntegerData>>No.of bits
---------------
=>This operator shift the "No.of Bits" towards Right side by adding No.of Zeros at Leftside (must be equal No. of Bits shifted toward Right)

Examples:
-------------------
>>> a=10
>>> res=a>>3
>>> print(res)---------1
>>> print(23>>2)--------5
-------------------------------------------------------------------------------------------------------------------
3) Bitwise OR Operator ( | ):
  ---------------------------------------------        
  =>The Functionality of  Bitwise OR Operator ( | )is shown in the following Truth table.
		-----------------------------------------------------------------------------------------------
			Varname1		Varname2		Varname1 | Varname2
		-----------------------------------------------------------------------------------------------
				0				0				0

				1				0				1

				0				1				1

				1				1				1
		-----------------------------------------------------------------------------------------------
-------------------
Examples:
-------------------
>>>a=10-------------------------------1 0 1 0
>>>b=3-------------------------------- 0 0 1 1
----------------------------------------------------------
>>>c=a|b----------------------------   1 0 1 1--------------Result is 11
>>>print(c)--- 11
------------------------------------------------------
a=10
b=3
c=a|b
print(c)----------------11
print(5|4)----------5
print(4|2)
-----------------------------------------------------------------------
Special Case :
-----------------------------
>> a={10,20,30}
>>> b={30,40,50}
>>> c=a.union(b)
>>> print(c,type(c))
{50, 20, 40, 10, 30} <class 'set'>
>>>
>>>
>>> a={10,20,30}
>>> b={30,40,50}
>>> d=a|b   # here Bitwise OR ( | ) used for Union of of sets
>>> print(d,type(d))-------------------{50, 20, 40, 10, 30} <class 'set'>
------------------------------------------------------------------
3) Bitwise AND Operator ( & ):
  ---------------------------------------------        
  =>The Functionality of  Bitwise AND Operator ( & )is shown in the following Truth table.
		-----------------------------------------------------------------------------------------------
			Varname1		Varname2		Varname1 & Varname2
		-----------------------------------------------------------------------------------------------
				0				0				0

				1				0				0			

				0				1				0

				1				1				1
		-----------------------------------------------------------------------------------------------
Examples:
-----------------
>>>a=10----------------------------  1 0 1 0
>>>b=15----------------------------  1 1 1 1
----------------------------	--------------------------
>>>c=a&b-----------------------      1 0 1 0------------Result is 10
-------------------------------------------------------------------------------------
>>> print(15&4)----------4
---------------------------------------------
>>> a={10,20,30}
>>> b={30,40,50}
>>> c=a.intersection(b)
>>> print(c,type(c))---------{30} <class 'set'>
>>>
>>> d=a&b
>>> print(d,type(d))---------{30} <class 'set'>
-----------------------------------------------------------------------------------------------------------------
5) Bitwise  Complement Operator ( ~ ):
-------------------------------------------------------------
=>The Functionality of Complement operator is that ~(Binary Formar format Giiven Number +1)
=>In Otherwords    ~n= -(n+1)

Examples:
---------------------------
=>a=10
>>>~a-------------------------------> ~(1010+1)
	----------------------------------> -(1010+1)-------------->   1 0 1 0
											   0  0 0 1
                                                                                        ---------------
											    1 0 1 1----->Result 11
--------------------------------------------
>>> a=50
>>> ~a---------------    -51
--------------------------------------------------------------------------------------------------------------
6) Bitiwse  XOR Operator  ( ^ ):
---------------------------------------------------------
 =>The Functionality of  Bitwise XOR Operator ( ^ )is shown in the following Truth table.
		-----------------------------------------------------------------------------------------------
			Varname1		Varname2		Varname1 ^ Varname2
		-----------------------------------------------------------------------------------------------
				0				0				 0

				1				0				 1

				0				1				1

				1				1				0
		-----------------------------------------------------------------------------------------------
Examples:
--------------------
>>>a=4--------------------------- 0 1 0 0
>>>b=3--------------------------  0 0 1 1
----------------			-------------------
>>>c=a^b-------------------------     0  1 1 1 ----Result is 7
>>>print(c)-----------7

----------------------------------------------------------------------------
>>>a=10----------------------   1  0  1 0
>>>b=15----------------------    1  1 1 1
---------------                      --------------------
>>>c=a^b----------------------- 0  1 0 1----------------Result is 5
>>>print(c)-----------5
------------------------------------------------------------------------------------------------
Special Case:
--------------------------------------
>>> a={10,20,30}
>>> b={30,40,50}
>>> c=a.symmetric_difference(b)
>>> print(c,type(c))
{40, 10, 50, 20} <class 'set'>
>>> d=a^b
>>> print(d,type(d))
{40, 10, 50, 20} <class 'set'>
--------------------------------------------------------------------------------------
